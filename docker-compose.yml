services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U morangoo -d station"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: sh -c "composer install --no-interaction --prefer-dist && php artisan key:generate --force && php artisan migrate --force || true && php artisan serve --host=0.0.0.0 --port=8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./frontend:/usr/src/app
    environment:
      - HOST=0.0.0.0
      - PORT=3000
      - API_URL=http://backend:8000
    depends_on:
      - backend
    ports:
      - "3000:3000"
    command: sh -c "npm install --legacy-peer-deps && npm run dev -- --host 0.0.0.0 --port 3000"

volumes:
  db-data:
